// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingCrab.DataAccess.Data;

#nullable disable

namespace ShoppingCrab.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231019042748_SeedDataToproductTable")]
    partial class SeedDataToproductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingCrab.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Category", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "books"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Jewellery"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Perfumes"
                        });
                });

            modelBuilder.Entity("ShoppingCrab.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Product", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Beautiful Pent with 6 pockets",
                            ListPrice = 60.0,
                            Name = "Levis Pent",
                            Price = 57.0,
                            Price100 = 48.0,
                            Price50 = 52.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Stunning necklace in heart shape",
                            ListPrice = 70.0,
                            Name = "Diamond Necklace",
                            Price = 67.0,
                            Price100 = 58.0,
                            Price50 = 62.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Real gold ring made of 24 carat gold",
                            ListPrice = 92.0,
                            Name = "24 Carat Gold Ring",
                            Price = 87.0,
                            Price100 = 78.0,
                            Price50 = 82.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Adidas perfume with a nice fragnence to use before workout",
                            ListPrice = 30.0,
                            Name = "Adidas Perfume",
                            Price = 27.0,
                            Price100 = 18.0,
                            Price50 = 22.0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Impress other people with rose fragnence.",
                            ListPrice = 45.0,
                            Name = "Boss perfume",
                            Price = 37.0,
                            Price100 = 28.0,
                            Price50 = 32.0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 99.0,
                            Name = "Fortune of Time",
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 40.0,
                            Name = "Dark Skies",
                            Price = 30.0,
                            Price100 = 20.0,
                            Price50 = 25.0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 55.0,
                            Name = "Vanish in the Sunset",
                            Price = 50.0,
                            Price100 = 35.0,
                            Price50 = 40.0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 70.0,
                            Name = "Cotton Candy",
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 30.0,
                            Name = "Rock in the Ocean",
                            Price = 27.0,
                            Price100 = 20.0,
                            Price50 = 25.0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ListPrice = 25.0,
                            Name = "Leaves and Wonders",
                            Price = 23.0,
                            Price100 = 20.0,
                            Price50 = 22.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
